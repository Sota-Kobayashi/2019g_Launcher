/*
 * uart.hpp
 *
 *  Created on: 2019/03/29
 *      Author: User
 */

#ifndef MYHEADERS_UART_HPP_
#define MYHEADERS_UART_HPP_

#include <vector>
#include <array>
#include <string>
#include "stm32f4xx.h"
#include "stm32f4xx_conf.h"

class UART
{
private:
	void GPIO_PinsInit();
	void USART_AF_Init();
	static constexpr uint32_t Baudrate = 9600;
public:
	UART()
	{
		this->GPIO_PinsInit();
		this->USART_AF_Init();
	}
	void TransmitData(uint8_t sendByte);
	inline void TransmitData(const uint8_t* pSendData, const size_t size){ for(size_t i = 0;i < size;i++)TransmitData(*(pSendData+i)); }
	inline void TransmitData(const std::string sendString) { for(auto i : sendString)TransmitData((uint8_t)sendString.at(i)); }
	template<size_t S>
	inline void TransmitData(const std::array<uint8_t,S>& sendDataArray){ for(auto i : sendDataArray)TransmitData(sendDataArray.at(i)); }
	inline void TransmitData(const std::vector<uint8_t>& sendVector){ for(auto i : sendVector)TransmitData(sendVector.at(i)); }
};



#endif /* MYHEADERS_UART_HPP_ */
