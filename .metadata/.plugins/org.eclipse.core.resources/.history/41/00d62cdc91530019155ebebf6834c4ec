/*
 * systick.hpp
 *
 *  Created on: 2019/03/31
 *      Author: User
 */

#ifndef MYHEADERS_SYSTICK_HPP_
#define MYHEADERS_SYSTICK_HPP_

#include <functional>
#include <vector>

namespace SysTick
{
static std::vector<std::function<void(void)>> sysTick_callsFunctions;

void init(const uint32_t SysTickFrequency = 1000)
{
	RCC_ClocksTypeDef RCC_Clocks;
	RCC_GetClocksFreq(&RCC_Clocks);
	SysTick_Config(RCC_Clocks.HCLK_Frequency / SysTickFrequency);
	NVIC_SetPriority(SysTick_IRQn, 3);
}

void additionCalledFunction(const std::function&& addFunc){ sysTick_callsFunctions.push_back(addFunc); }

extern "C"
{
void SysTick_Handler()
{
	for(auto i : sysTick_callsFunctions)i();
	led.toggle(LED::ledColor::Yellow);
}
}

}


#endif /* MYHEADERS_SYSTICK_HPP_ */
